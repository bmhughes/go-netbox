// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2020 Samuel Mutel <12967891+smutel@users.noreply.github.com>
//
// Permission to use, copy, modify, and distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
//

package core

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewCoreJobsListParams creates a new CoreJobsListParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCoreJobsListParams() *CoreJobsListParams {
	return &CoreJobsListParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCoreJobsListParamsWithTimeout creates a new CoreJobsListParams object
// with the ability to set a timeout on a request.
func NewCoreJobsListParamsWithTimeout(timeout time.Duration) *CoreJobsListParams {
	return &CoreJobsListParams{
		timeout: timeout,
	}
}

// NewCoreJobsListParamsWithContext creates a new CoreJobsListParams object
// with the ability to set a context for a request.
func NewCoreJobsListParamsWithContext(ctx context.Context) *CoreJobsListParams {
	return &CoreJobsListParams{
		Context: ctx,
	}
}

// NewCoreJobsListParamsWithHTTPClient creates a new CoreJobsListParams object
// with the ability to set a custom HTTPClient for a request.
func NewCoreJobsListParamsWithHTTPClient(client *http.Client) *CoreJobsListParams {
	return &CoreJobsListParams{
		HTTPClient: client,
	}
}

/*
CoreJobsListParams contains all the parameters to send to the API endpoint

	for the core jobs list operation.

	Typically these are written to a http.Request.
*/
type CoreJobsListParams struct {

	// Completed.
	Completed *string

	// CompletedAfter.
	CompletedAfter *string

	// CompletedBefore.
	CompletedBefore *string

	// Created.
	Created *string

	// CreatedAfter.
	CreatedAfter *string

	// CreatedBefore.
	CreatedBefore *string

	// ID.
	ID *string

	// IDGt.
	IDGt *string

	// IDGte.
	IDGte *string

	// IDLt.
	IDLt *string

	// IDLte.
	IDLte *string

	// IDn.
	IDn *string

	// Interval.
	Interval *string

	// IntervalGt.
	IntervalGt *string

	// IntervalGte.
	IntervalGte *string

	// IntervalLt.
	IntervalLt *string

	// IntervalLte.
	IntervalLte *string

	// Intervaln.
	Intervaln *string

	/* Limit.

	   Number of results to return per page.
	*/
	Limit *int64

	// Name.
	Name *string

	// NameEmpty.
	NameEmpty *string

	// NameIc.
	NameIc *string

	// NameIe.
	NameIe *string

	// NameIew.
	NameIew *string

	// NameIsw.
	NameIsw *string

	// Namen.
	Namen *string

	// NameNic.
	NameNic *string

	// NameNie.
	NameNie *string

	// NameNiew.
	NameNiew *string

	// NameNisw.
	NameNisw *string

	// ObjectID.
	ObjectID *string

	// ObjectIDGt.
	ObjectIDGt *string

	// ObjectIDGte.
	ObjectIDGte *string

	// ObjectIDLt.
	ObjectIDLt *string

	// ObjectIDLte.
	ObjectIDLte *string

	// ObjectIDn.
	ObjectIDn *string

	// ObjectType.
	ObjectType *string

	// ObjectTypen.
	ObjectTypen *string

	/* Offset.

	   The initial index from which to return the results.
	*/
	Offset *int64

	/* Ordering.

	   Which field to use when ordering the results.
	*/
	Ordering *string

	// Q.
	Q *string

	// Scheduled.
	Scheduled *string

	// ScheduledAfter.
	ScheduledAfter *string

	// ScheduledBefore.
	ScheduledBefore *string

	// Started.
	Started *string

	// StartedAfter.
	StartedAfter *string

	// StartedBefore.
	StartedBefore *string

	// Status.
	Status *string

	// Statusn.
	Statusn *string

	// User.
	User *string

	// Usern.
	Usern *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the core jobs list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CoreJobsListParams) WithDefaults() *CoreJobsListParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the core jobs list params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CoreJobsListParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the core jobs list params
func (o *CoreJobsListParams) WithTimeout(timeout time.Duration) *CoreJobsListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the core jobs list params
func (o *CoreJobsListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the core jobs list params
func (o *CoreJobsListParams) WithContext(ctx context.Context) *CoreJobsListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the core jobs list params
func (o *CoreJobsListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the core jobs list params
func (o *CoreJobsListParams) WithHTTPClient(client *http.Client) *CoreJobsListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the core jobs list params
func (o *CoreJobsListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCompleted adds the completed to the core jobs list params
func (o *CoreJobsListParams) WithCompleted(completed *string) *CoreJobsListParams {
	o.SetCompleted(completed)
	return o
}

// SetCompleted adds the completed to the core jobs list params
func (o *CoreJobsListParams) SetCompleted(completed *string) {
	o.Completed = completed
}

// WithCompletedAfter adds the completedAfter to the core jobs list params
func (o *CoreJobsListParams) WithCompletedAfter(completedAfter *string) *CoreJobsListParams {
	o.SetCompletedAfter(completedAfter)
	return o
}

// SetCompletedAfter adds the completedAfter to the core jobs list params
func (o *CoreJobsListParams) SetCompletedAfter(completedAfter *string) {
	o.CompletedAfter = completedAfter
}

// WithCompletedBefore adds the completedBefore to the core jobs list params
func (o *CoreJobsListParams) WithCompletedBefore(completedBefore *string) *CoreJobsListParams {
	o.SetCompletedBefore(completedBefore)
	return o
}

// SetCompletedBefore adds the completedBefore to the core jobs list params
func (o *CoreJobsListParams) SetCompletedBefore(completedBefore *string) {
	o.CompletedBefore = completedBefore
}

// WithCreated adds the created to the core jobs list params
func (o *CoreJobsListParams) WithCreated(created *string) *CoreJobsListParams {
	o.SetCreated(created)
	return o
}

// SetCreated adds the created to the core jobs list params
func (o *CoreJobsListParams) SetCreated(created *string) {
	o.Created = created
}

// WithCreatedAfter adds the createdAfter to the core jobs list params
func (o *CoreJobsListParams) WithCreatedAfter(createdAfter *string) *CoreJobsListParams {
	o.SetCreatedAfter(createdAfter)
	return o
}

// SetCreatedAfter adds the createdAfter to the core jobs list params
func (o *CoreJobsListParams) SetCreatedAfter(createdAfter *string) {
	o.CreatedAfter = createdAfter
}

// WithCreatedBefore adds the createdBefore to the core jobs list params
func (o *CoreJobsListParams) WithCreatedBefore(createdBefore *string) *CoreJobsListParams {
	o.SetCreatedBefore(createdBefore)
	return o
}

// SetCreatedBefore adds the createdBefore to the core jobs list params
func (o *CoreJobsListParams) SetCreatedBefore(createdBefore *string) {
	o.CreatedBefore = createdBefore
}

// WithID adds the id to the core jobs list params
func (o *CoreJobsListParams) WithID(id *string) *CoreJobsListParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the core jobs list params
func (o *CoreJobsListParams) SetID(id *string) {
	o.ID = id
}

// WithIDGt adds the iDGt to the core jobs list params
func (o *CoreJobsListParams) WithIDGt(iDGt *string) *CoreJobsListParams {
	o.SetIDGt(iDGt)
	return o
}

// SetIDGt adds the idGt to the core jobs list params
func (o *CoreJobsListParams) SetIDGt(iDGt *string) {
	o.IDGt = iDGt
}

// WithIDGte adds the iDGte to the core jobs list params
func (o *CoreJobsListParams) WithIDGte(iDGte *string) *CoreJobsListParams {
	o.SetIDGte(iDGte)
	return o
}

// SetIDGte adds the idGte to the core jobs list params
func (o *CoreJobsListParams) SetIDGte(iDGte *string) {
	o.IDGte = iDGte
}

// WithIDLt adds the iDLt to the core jobs list params
func (o *CoreJobsListParams) WithIDLt(iDLt *string) *CoreJobsListParams {
	o.SetIDLt(iDLt)
	return o
}

// SetIDLt adds the idLt to the core jobs list params
func (o *CoreJobsListParams) SetIDLt(iDLt *string) {
	o.IDLt = iDLt
}

// WithIDLte adds the iDLte to the core jobs list params
func (o *CoreJobsListParams) WithIDLte(iDLte *string) *CoreJobsListParams {
	o.SetIDLte(iDLte)
	return o
}

// SetIDLte adds the idLte to the core jobs list params
func (o *CoreJobsListParams) SetIDLte(iDLte *string) {
	o.IDLte = iDLte
}

// WithIDn adds the iDn to the core jobs list params
func (o *CoreJobsListParams) WithIDn(iDn *string) *CoreJobsListParams {
	o.SetIDn(iDn)
	return o
}

// SetIDn adds the idN to the core jobs list params
func (o *CoreJobsListParams) SetIDn(iDn *string) {
	o.IDn = iDn
}

// WithInterval adds the interval to the core jobs list params
func (o *CoreJobsListParams) WithInterval(interval *string) *CoreJobsListParams {
	o.SetInterval(interval)
	return o
}

// SetInterval adds the interval to the core jobs list params
func (o *CoreJobsListParams) SetInterval(interval *string) {
	o.Interval = interval
}

// WithIntervalGt adds the intervalGt to the core jobs list params
func (o *CoreJobsListParams) WithIntervalGt(intervalGt *string) *CoreJobsListParams {
	o.SetIntervalGt(intervalGt)
	return o
}

// SetIntervalGt adds the intervalGt to the core jobs list params
func (o *CoreJobsListParams) SetIntervalGt(intervalGt *string) {
	o.IntervalGt = intervalGt
}

// WithIntervalGte adds the intervalGte to the core jobs list params
func (o *CoreJobsListParams) WithIntervalGte(intervalGte *string) *CoreJobsListParams {
	o.SetIntervalGte(intervalGte)
	return o
}

// SetIntervalGte adds the intervalGte to the core jobs list params
func (o *CoreJobsListParams) SetIntervalGte(intervalGte *string) {
	o.IntervalGte = intervalGte
}

// WithIntervalLt adds the intervalLt to the core jobs list params
func (o *CoreJobsListParams) WithIntervalLt(intervalLt *string) *CoreJobsListParams {
	o.SetIntervalLt(intervalLt)
	return o
}

// SetIntervalLt adds the intervalLt to the core jobs list params
func (o *CoreJobsListParams) SetIntervalLt(intervalLt *string) {
	o.IntervalLt = intervalLt
}

// WithIntervalLte adds the intervalLte to the core jobs list params
func (o *CoreJobsListParams) WithIntervalLte(intervalLte *string) *CoreJobsListParams {
	o.SetIntervalLte(intervalLte)
	return o
}

// SetIntervalLte adds the intervalLte to the core jobs list params
func (o *CoreJobsListParams) SetIntervalLte(intervalLte *string) {
	o.IntervalLte = intervalLte
}

// WithIntervaln adds the intervaln to the core jobs list params
func (o *CoreJobsListParams) WithIntervaln(intervaln *string) *CoreJobsListParams {
	o.SetIntervaln(intervaln)
	return o
}

// SetIntervaln adds the intervalN to the core jobs list params
func (o *CoreJobsListParams) SetIntervaln(intervaln *string) {
	o.Intervaln = intervaln
}

// WithLimit adds the limit to the core jobs list params
func (o *CoreJobsListParams) WithLimit(limit *int64) *CoreJobsListParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the core jobs list params
func (o *CoreJobsListParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WithName adds the name to the core jobs list params
func (o *CoreJobsListParams) WithName(name *string) *CoreJobsListParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the core jobs list params
func (o *CoreJobsListParams) SetName(name *string) {
	o.Name = name
}

// WithNameEmpty adds the nameEmpty to the core jobs list params
func (o *CoreJobsListParams) WithNameEmpty(nameEmpty *string) *CoreJobsListParams {
	o.SetNameEmpty(nameEmpty)
	return o
}

// SetNameEmpty adds the nameEmpty to the core jobs list params
func (o *CoreJobsListParams) SetNameEmpty(nameEmpty *string) {
	o.NameEmpty = nameEmpty
}

// WithNameIc adds the nameIc to the core jobs list params
func (o *CoreJobsListParams) WithNameIc(nameIc *string) *CoreJobsListParams {
	o.SetNameIc(nameIc)
	return o
}

// SetNameIc adds the nameIc to the core jobs list params
func (o *CoreJobsListParams) SetNameIc(nameIc *string) {
	o.NameIc = nameIc
}

// WithNameIe adds the nameIe to the core jobs list params
func (o *CoreJobsListParams) WithNameIe(nameIe *string) *CoreJobsListParams {
	o.SetNameIe(nameIe)
	return o
}

// SetNameIe adds the nameIe to the core jobs list params
func (o *CoreJobsListParams) SetNameIe(nameIe *string) {
	o.NameIe = nameIe
}

// WithNameIew adds the nameIew to the core jobs list params
func (o *CoreJobsListParams) WithNameIew(nameIew *string) *CoreJobsListParams {
	o.SetNameIew(nameIew)
	return o
}

// SetNameIew adds the nameIew to the core jobs list params
func (o *CoreJobsListParams) SetNameIew(nameIew *string) {
	o.NameIew = nameIew
}

// WithNameIsw adds the nameIsw to the core jobs list params
func (o *CoreJobsListParams) WithNameIsw(nameIsw *string) *CoreJobsListParams {
	o.SetNameIsw(nameIsw)
	return o
}

// SetNameIsw adds the nameIsw to the core jobs list params
func (o *CoreJobsListParams) SetNameIsw(nameIsw *string) {
	o.NameIsw = nameIsw
}

// WithNamen adds the namen to the core jobs list params
func (o *CoreJobsListParams) WithNamen(namen *string) *CoreJobsListParams {
	o.SetNamen(namen)
	return o
}

// SetNamen adds the nameN to the core jobs list params
func (o *CoreJobsListParams) SetNamen(namen *string) {
	o.Namen = namen
}

// WithNameNic adds the nameNic to the core jobs list params
func (o *CoreJobsListParams) WithNameNic(nameNic *string) *CoreJobsListParams {
	o.SetNameNic(nameNic)
	return o
}

// SetNameNic adds the nameNic to the core jobs list params
func (o *CoreJobsListParams) SetNameNic(nameNic *string) {
	o.NameNic = nameNic
}

// WithNameNie adds the nameNie to the core jobs list params
func (o *CoreJobsListParams) WithNameNie(nameNie *string) *CoreJobsListParams {
	o.SetNameNie(nameNie)
	return o
}

// SetNameNie adds the nameNie to the core jobs list params
func (o *CoreJobsListParams) SetNameNie(nameNie *string) {
	o.NameNie = nameNie
}

// WithNameNiew adds the nameNiew to the core jobs list params
func (o *CoreJobsListParams) WithNameNiew(nameNiew *string) *CoreJobsListParams {
	o.SetNameNiew(nameNiew)
	return o
}

// SetNameNiew adds the nameNiew to the core jobs list params
func (o *CoreJobsListParams) SetNameNiew(nameNiew *string) {
	o.NameNiew = nameNiew
}

// WithNameNisw adds the nameNisw to the core jobs list params
func (o *CoreJobsListParams) WithNameNisw(nameNisw *string) *CoreJobsListParams {
	o.SetNameNisw(nameNisw)
	return o
}

// SetNameNisw adds the nameNisw to the core jobs list params
func (o *CoreJobsListParams) SetNameNisw(nameNisw *string) {
	o.NameNisw = nameNisw
}

// WithObjectID adds the objectID to the core jobs list params
func (o *CoreJobsListParams) WithObjectID(objectID *string) *CoreJobsListParams {
	o.SetObjectID(objectID)
	return o
}

// SetObjectID adds the objectId to the core jobs list params
func (o *CoreJobsListParams) SetObjectID(objectID *string) {
	o.ObjectID = objectID
}

// WithObjectIDGt adds the objectIDGt to the core jobs list params
func (o *CoreJobsListParams) WithObjectIDGt(objectIDGt *string) *CoreJobsListParams {
	o.SetObjectIDGt(objectIDGt)
	return o
}

// SetObjectIDGt adds the objectIdGt to the core jobs list params
func (o *CoreJobsListParams) SetObjectIDGt(objectIDGt *string) {
	o.ObjectIDGt = objectIDGt
}

// WithObjectIDGte adds the objectIDGte to the core jobs list params
func (o *CoreJobsListParams) WithObjectIDGte(objectIDGte *string) *CoreJobsListParams {
	o.SetObjectIDGte(objectIDGte)
	return o
}

// SetObjectIDGte adds the objectIdGte to the core jobs list params
func (o *CoreJobsListParams) SetObjectIDGte(objectIDGte *string) {
	o.ObjectIDGte = objectIDGte
}

// WithObjectIDLt adds the objectIDLt to the core jobs list params
func (o *CoreJobsListParams) WithObjectIDLt(objectIDLt *string) *CoreJobsListParams {
	o.SetObjectIDLt(objectIDLt)
	return o
}

// SetObjectIDLt adds the objectIdLt to the core jobs list params
func (o *CoreJobsListParams) SetObjectIDLt(objectIDLt *string) {
	o.ObjectIDLt = objectIDLt
}

// WithObjectIDLte adds the objectIDLte to the core jobs list params
func (o *CoreJobsListParams) WithObjectIDLte(objectIDLte *string) *CoreJobsListParams {
	o.SetObjectIDLte(objectIDLte)
	return o
}

// SetObjectIDLte adds the objectIdLte to the core jobs list params
func (o *CoreJobsListParams) SetObjectIDLte(objectIDLte *string) {
	o.ObjectIDLte = objectIDLte
}

// WithObjectIDn adds the objectIDn to the core jobs list params
func (o *CoreJobsListParams) WithObjectIDn(objectIDn *string) *CoreJobsListParams {
	o.SetObjectIDn(objectIDn)
	return o
}

// SetObjectIDn adds the objectIdN to the core jobs list params
func (o *CoreJobsListParams) SetObjectIDn(objectIDn *string) {
	o.ObjectIDn = objectIDn
}

// WithObjectType adds the objectType to the core jobs list params
func (o *CoreJobsListParams) WithObjectType(objectType *string) *CoreJobsListParams {
	o.SetObjectType(objectType)
	return o
}

// SetObjectType adds the objectType to the core jobs list params
func (o *CoreJobsListParams) SetObjectType(objectType *string) {
	o.ObjectType = objectType
}

// WithObjectTypen adds the objectTypen to the core jobs list params
func (o *CoreJobsListParams) WithObjectTypen(objectTypen *string) *CoreJobsListParams {
	o.SetObjectTypen(objectTypen)
	return o
}

// SetObjectTypen adds the objectTypeN to the core jobs list params
func (o *CoreJobsListParams) SetObjectTypen(objectTypen *string) {
	o.ObjectTypen = objectTypen
}

// WithOffset adds the offset to the core jobs list params
func (o *CoreJobsListParams) WithOffset(offset *int64) *CoreJobsListParams {
	o.SetOffset(offset)
	return o
}

// SetOffset adds the offset to the core jobs list params
func (o *CoreJobsListParams) SetOffset(offset *int64) {
	o.Offset = offset
}

// WithOrdering adds the ordering to the core jobs list params
func (o *CoreJobsListParams) WithOrdering(ordering *string) *CoreJobsListParams {
	o.SetOrdering(ordering)
	return o
}

// SetOrdering adds the ordering to the core jobs list params
func (o *CoreJobsListParams) SetOrdering(ordering *string) {
	o.Ordering = ordering
}

// WithQ adds the q to the core jobs list params
func (o *CoreJobsListParams) WithQ(q *string) *CoreJobsListParams {
	o.SetQ(q)
	return o
}

// SetQ adds the q to the core jobs list params
func (o *CoreJobsListParams) SetQ(q *string) {
	o.Q = q
}

// WithScheduled adds the scheduled to the core jobs list params
func (o *CoreJobsListParams) WithScheduled(scheduled *string) *CoreJobsListParams {
	o.SetScheduled(scheduled)
	return o
}

// SetScheduled adds the scheduled to the core jobs list params
func (o *CoreJobsListParams) SetScheduled(scheduled *string) {
	o.Scheduled = scheduled
}

// WithScheduledAfter adds the scheduledAfter to the core jobs list params
func (o *CoreJobsListParams) WithScheduledAfter(scheduledAfter *string) *CoreJobsListParams {
	o.SetScheduledAfter(scheduledAfter)
	return o
}

// SetScheduledAfter adds the scheduledAfter to the core jobs list params
func (o *CoreJobsListParams) SetScheduledAfter(scheduledAfter *string) {
	o.ScheduledAfter = scheduledAfter
}

// WithScheduledBefore adds the scheduledBefore to the core jobs list params
func (o *CoreJobsListParams) WithScheduledBefore(scheduledBefore *string) *CoreJobsListParams {
	o.SetScheduledBefore(scheduledBefore)
	return o
}

// SetScheduledBefore adds the scheduledBefore to the core jobs list params
func (o *CoreJobsListParams) SetScheduledBefore(scheduledBefore *string) {
	o.ScheduledBefore = scheduledBefore
}

// WithStarted adds the started to the core jobs list params
func (o *CoreJobsListParams) WithStarted(started *string) *CoreJobsListParams {
	o.SetStarted(started)
	return o
}

// SetStarted adds the started to the core jobs list params
func (o *CoreJobsListParams) SetStarted(started *string) {
	o.Started = started
}

// WithStartedAfter adds the startedAfter to the core jobs list params
func (o *CoreJobsListParams) WithStartedAfter(startedAfter *string) *CoreJobsListParams {
	o.SetStartedAfter(startedAfter)
	return o
}

// SetStartedAfter adds the startedAfter to the core jobs list params
func (o *CoreJobsListParams) SetStartedAfter(startedAfter *string) {
	o.StartedAfter = startedAfter
}

// WithStartedBefore adds the startedBefore to the core jobs list params
func (o *CoreJobsListParams) WithStartedBefore(startedBefore *string) *CoreJobsListParams {
	o.SetStartedBefore(startedBefore)
	return o
}

// SetStartedBefore adds the startedBefore to the core jobs list params
func (o *CoreJobsListParams) SetStartedBefore(startedBefore *string) {
	o.StartedBefore = startedBefore
}

// WithStatus adds the status to the core jobs list params
func (o *CoreJobsListParams) WithStatus(status *string) *CoreJobsListParams {
	o.SetStatus(status)
	return o
}

// SetStatus adds the status to the core jobs list params
func (o *CoreJobsListParams) SetStatus(status *string) {
	o.Status = status
}

// WithStatusn adds the statusn to the core jobs list params
func (o *CoreJobsListParams) WithStatusn(statusn *string) *CoreJobsListParams {
	o.SetStatusn(statusn)
	return o
}

// SetStatusn adds the statusN to the core jobs list params
func (o *CoreJobsListParams) SetStatusn(statusn *string) {
	o.Statusn = statusn
}

// WithUser adds the user to the core jobs list params
func (o *CoreJobsListParams) WithUser(user *string) *CoreJobsListParams {
	o.SetUser(user)
	return o
}

// SetUser adds the user to the core jobs list params
func (o *CoreJobsListParams) SetUser(user *string) {
	o.User = user
}

// WithUsern adds the usern to the core jobs list params
func (o *CoreJobsListParams) WithUsern(usern *string) *CoreJobsListParams {
	o.SetUsern(usern)
	return o
}

// SetUsern adds the userN to the core jobs list params
func (o *CoreJobsListParams) SetUsern(usern *string) {
	o.Usern = usern
}

// WriteToRequest writes these params to a swagger request
func (o *CoreJobsListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Completed != nil {

		// query param completed
		var qrCompleted string

		if o.Completed != nil {
			qrCompleted = *o.Completed
		}
		qCompleted := qrCompleted
		if qCompleted != "" {

			if err := r.SetQueryParam("completed", qCompleted); err != nil {
				return err
			}
		}
	}

	if o.CompletedAfter != nil {

		// query param completed__after
		var qrCompletedAfter string

		if o.CompletedAfter != nil {
			qrCompletedAfter = *o.CompletedAfter
		}
		qCompletedAfter := qrCompletedAfter
		if qCompletedAfter != "" {

			if err := r.SetQueryParam("completed__after", qCompletedAfter); err != nil {
				return err
			}
		}
	}

	if o.CompletedBefore != nil {

		// query param completed__before
		var qrCompletedBefore string

		if o.CompletedBefore != nil {
			qrCompletedBefore = *o.CompletedBefore
		}
		qCompletedBefore := qrCompletedBefore
		if qCompletedBefore != "" {

			if err := r.SetQueryParam("completed__before", qCompletedBefore); err != nil {
				return err
			}
		}
	}

	if o.Created != nil {

		// query param created
		var qrCreated string

		if o.Created != nil {
			qrCreated = *o.Created
		}
		qCreated := qrCreated
		if qCreated != "" {

			if err := r.SetQueryParam("created", qCreated); err != nil {
				return err
			}
		}
	}

	if o.CreatedAfter != nil {

		// query param created__after
		var qrCreatedAfter string

		if o.CreatedAfter != nil {
			qrCreatedAfter = *o.CreatedAfter
		}
		qCreatedAfter := qrCreatedAfter
		if qCreatedAfter != "" {

			if err := r.SetQueryParam("created__after", qCreatedAfter); err != nil {
				return err
			}
		}
	}

	if o.CreatedBefore != nil {

		// query param created__before
		var qrCreatedBefore string

		if o.CreatedBefore != nil {
			qrCreatedBefore = *o.CreatedBefore
		}
		qCreatedBefore := qrCreatedBefore
		if qCreatedBefore != "" {

			if err := r.SetQueryParam("created__before", qCreatedBefore); err != nil {
				return err
			}
		}
	}

	if o.ID != nil {

		// query param id
		var qrID string

		if o.ID != nil {
			qrID = *o.ID
		}
		qID := qrID
		if qID != "" {

			if err := r.SetQueryParam("id", qID); err != nil {
				return err
			}
		}
	}

	if o.IDGt != nil {

		// query param id__gt
		var qrIDGt string

		if o.IDGt != nil {
			qrIDGt = *o.IDGt
		}
		qIDGt := qrIDGt
		if qIDGt != "" {

			if err := r.SetQueryParam("id__gt", qIDGt); err != nil {
				return err
			}
		}
	}

	if o.IDGte != nil {

		// query param id__gte
		var qrIDGte string

		if o.IDGte != nil {
			qrIDGte = *o.IDGte
		}
		qIDGte := qrIDGte
		if qIDGte != "" {

			if err := r.SetQueryParam("id__gte", qIDGte); err != nil {
				return err
			}
		}
	}

	if o.IDLt != nil {

		// query param id__lt
		var qrIDLt string

		if o.IDLt != nil {
			qrIDLt = *o.IDLt
		}
		qIDLt := qrIDLt
		if qIDLt != "" {

			if err := r.SetQueryParam("id__lt", qIDLt); err != nil {
				return err
			}
		}
	}

	if o.IDLte != nil {

		// query param id__lte
		var qrIDLte string

		if o.IDLte != nil {
			qrIDLte = *o.IDLte
		}
		qIDLte := qrIDLte
		if qIDLte != "" {

			if err := r.SetQueryParam("id__lte", qIDLte); err != nil {
				return err
			}
		}
	}

	if o.IDn != nil {

		// query param id__n
		var qrIDn string

		if o.IDn != nil {
			qrIDn = *o.IDn
		}
		qIDn := qrIDn
		if qIDn != "" {

			if err := r.SetQueryParam("id__n", qIDn); err != nil {
				return err
			}
		}
	}

	if o.Interval != nil {

		// query param interval
		var qrInterval string

		if o.Interval != nil {
			qrInterval = *o.Interval
		}
		qInterval := qrInterval
		if qInterval != "" {

			if err := r.SetQueryParam("interval", qInterval); err != nil {
				return err
			}
		}
	}

	if o.IntervalGt != nil {

		// query param interval__gt
		var qrIntervalGt string

		if o.IntervalGt != nil {
			qrIntervalGt = *o.IntervalGt
		}
		qIntervalGt := qrIntervalGt
		if qIntervalGt != "" {

			if err := r.SetQueryParam("interval__gt", qIntervalGt); err != nil {
				return err
			}
		}
	}

	if o.IntervalGte != nil {

		// query param interval__gte
		var qrIntervalGte string

		if o.IntervalGte != nil {
			qrIntervalGte = *o.IntervalGte
		}
		qIntervalGte := qrIntervalGte
		if qIntervalGte != "" {

			if err := r.SetQueryParam("interval__gte", qIntervalGte); err != nil {
				return err
			}
		}
	}

	if o.IntervalLt != nil {

		// query param interval__lt
		var qrIntervalLt string

		if o.IntervalLt != nil {
			qrIntervalLt = *o.IntervalLt
		}
		qIntervalLt := qrIntervalLt
		if qIntervalLt != "" {

			if err := r.SetQueryParam("interval__lt", qIntervalLt); err != nil {
				return err
			}
		}
	}

	if o.IntervalLte != nil {

		// query param interval__lte
		var qrIntervalLte string

		if o.IntervalLte != nil {
			qrIntervalLte = *o.IntervalLte
		}
		qIntervalLte := qrIntervalLte
		if qIntervalLte != "" {

			if err := r.SetQueryParam("interval__lte", qIntervalLte); err != nil {
				return err
			}
		}
	}

	if o.Intervaln != nil {

		// query param interval__n
		var qrIntervaln string

		if o.Intervaln != nil {
			qrIntervaln = *o.Intervaln
		}
		qIntervaln := qrIntervaln
		if qIntervaln != "" {

			if err := r.SetQueryParam("interval__n", qIntervaln); err != nil {
				return err
			}
		}
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if o.Name != nil {

		// query param name
		var qrName string

		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {

			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}
	}

	if o.NameEmpty != nil {

		// query param name__empty
		var qrNameEmpty string

		if o.NameEmpty != nil {
			qrNameEmpty = *o.NameEmpty
		}
		qNameEmpty := qrNameEmpty
		if qNameEmpty != "" {

			if err := r.SetQueryParam("name__empty", qNameEmpty); err != nil {
				return err
			}
		}
	}

	if o.NameIc != nil {

		// query param name__ic
		var qrNameIc string

		if o.NameIc != nil {
			qrNameIc = *o.NameIc
		}
		qNameIc := qrNameIc
		if qNameIc != "" {

			if err := r.SetQueryParam("name__ic", qNameIc); err != nil {
				return err
			}
		}
	}

	if o.NameIe != nil {

		// query param name__ie
		var qrNameIe string

		if o.NameIe != nil {
			qrNameIe = *o.NameIe
		}
		qNameIe := qrNameIe
		if qNameIe != "" {

			if err := r.SetQueryParam("name__ie", qNameIe); err != nil {
				return err
			}
		}
	}

	if o.NameIew != nil {

		// query param name__iew
		var qrNameIew string

		if o.NameIew != nil {
			qrNameIew = *o.NameIew
		}
		qNameIew := qrNameIew
		if qNameIew != "" {

			if err := r.SetQueryParam("name__iew", qNameIew); err != nil {
				return err
			}
		}
	}

	if o.NameIsw != nil {

		// query param name__isw
		var qrNameIsw string

		if o.NameIsw != nil {
			qrNameIsw = *o.NameIsw
		}
		qNameIsw := qrNameIsw
		if qNameIsw != "" {

			if err := r.SetQueryParam("name__isw", qNameIsw); err != nil {
				return err
			}
		}
	}

	if o.Namen != nil {

		// query param name__n
		var qrNamen string

		if o.Namen != nil {
			qrNamen = *o.Namen
		}
		qNamen := qrNamen
		if qNamen != "" {

			if err := r.SetQueryParam("name__n", qNamen); err != nil {
				return err
			}
		}
	}

	if o.NameNic != nil {

		// query param name__nic
		var qrNameNic string

		if o.NameNic != nil {
			qrNameNic = *o.NameNic
		}
		qNameNic := qrNameNic
		if qNameNic != "" {

			if err := r.SetQueryParam("name__nic", qNameNic); err != nil {
				return err
			}
		}
	}

	if o.NameNie != nil {

		// query param name__nie
		var qrNameNie string

		if o.NameNie != nil {
			qrNameNie = *o.NameNie
		}
		qNameNie := qrNameNie
		if qNameNie != "" {

			if err := r.SetQueryParam("name__nie", qNameNie); err != nil {
				return err
			}
		}
	}

	if o.NameNiew != nil {

		// query param name__niew
		var qrNameNiew string

		if o.NameNiew != nil {
			qrNameNiew = *o.NameNiew
		}
		qNameNiew := qrNameNiew
		if qNameNiew != "" {

			if err := r.SetQueryParam("name__niew", qNameNiew); err != nil {
				return err
			}
		}
	}

	if o.NameNisw != nil {

		// query param name__nisw
		var qrNameNisw string

		if o.NameNisw != nil {
			qrNameNisw = *o.NameNisw
		}
		qNameNisw := qrNameNisw
		if qNameNisw != "" {

			if err := r.SetQueryParam("name__nisw", qNameNisw); err != nil {
				return err
			}
		}
	}

	if o.ObjectID != nil {

		// query param object_id
		var qrObjectID string

		if o.ObjectID != nil {
			qrObjectID = *o.ObjectID
		}
		qObjectID := qrObjectID
		if qObjectID != "" {

			if err := r.SetQueryParam("object_id", qObjectID); err != nil {
				return err
			}
		}
	}

	if o.ObjectIDGt != nil {

		// query param object_id__gt
		var qrObjectIDGt string

		if o.ObjectIDGt != nil {
			qrObjectIDGt = *o.ObjectIDGt
		}
		qObjectIDGt := qrObjectIDGt
		if qObjectIDGt != "" {

			if err := r.SetQueryParam("object_id__gt", qObjectIDGt); err != nil {
				return err
			}
		}
	}

	if o.ObjectIDGte != nil {

		// query param object_id__gte
		var qrObjectIDGte string

		if o.ObjectIDGte != nil {
			qrObjectIDGte = *o.ObjectIDGte
		}
		qObjectIDGte := qrObjectIDGte
		if qObjectIDGte != "" {

			if err := r.SetQueryParam("object_id__gte", qObjectIDGte); err != nil {
				return err
			}
		}
	}

	if o.ObjectIDLt != nil {

		// query param object_id__lt
		var qrObjectIDLt string

		if o.ObjectIDLt != nil {
			qrObjectIDLt = *o.ObjectIDLt
		}
		qObjectIDLt := qrObjectIDLt
		if qObjectIDLt != "" {

			if err := r.SetQueryParam("object_id__lt", qObjectIDLt); err != nil {
				return err
			}
		}
	}

	if o.ObjectIDLte != nil {

		// query param object_id__lte
		var qrObjectIDLte string

		if o.ObjectIDLte != nil {
			qrObjectIDLte = *o.ObjectIDLte
		}
		qObjectIDLte := qrObjectIDLte
		if qObjectIDLte != "" {

			if err := r.SetQueryParam("object_id__lte", qObjectIDLte); err != nil {
				return err
			}
		}
	}

	if o.ObjectIDn != nil {

		// query param object_id__n
		var qrObjectIDn string

		if o.ObjectIDn != nil {
			qrObjectIDn = *o.ObjectIDn
		}
		qObjectIDn := qrObjectIDn
		if qObjectIDn != "" {

			if err := r.SetQueryParam("object_id__n", qObjectIDn); err != nil {
				return err
			}
		}
	}

	if o.ObjectType != nil {

		// query param object_type
		var qrObjectType string

		if o.ObjectType != nil {
			qrObjectType = *o.ObjectType
		}
		qObjectType := qrObjectType
		if qObjectType != "" {

			if err := r.SetQueryParam("object_type", qObjectType); err != nil {
				return err
			}
		}
	}

	if o.ObjectTypen != nil {

		// query param object_type__n
		var qrObjectTypen string

		if o.ObjectTypen != nil {
			qrObjectTypen = *o.ObjectTypen
		}
		qObjectTypen := qrObjectTypen
		if qObjectTypen != "" {

			if err := r.SetQueryParam("object_type__n", qObjectTypen); err != nil {
				return err
			}
		}
	}

	if o.Offset != nil {

		// query param offset
		var qrOffset int64

		if o.Offset != nil {
			qrOffset = *o.Offset
		}
		qOffset := swag.FormatInt64(qrOffset)
		if qOffset != "" {

			if err := r.SetQueryParam("offset", qOffset); err != nil {
				return err
			}
		}
	}

	if o.Ordering != nil {

		// query param ordering
		var qrOrdering string

		if o.Ordering != nil {
			qrOrdering = *o.Ordering
		}
		qOrdering := qrOrdering
		if qOrdering != "" {

			if err := r.SetQueryParam("ordering", qOrdering); err != nil {
				return err
			}
		}
	}

	if o.Q != nil {

		// query param q
		var qrQ string

		if o.Q != nil {
			qrQ = *o.Q
		}
		qQ := qrQ
		if qQ != "" {

			if err := r.SetQueryParam("q", qQ); err != nil {
				return err
			}
		}
	}

	if o.Scheduled != nil {

		// query param scheduled
		var qrScheduled string

		if o.Scheduled != nil {
			qrScheduled = *o.Scheduled
		}
		qScheduled := qrScheduled
		if qScheduled != "" {

			if err := r.SetQueryParam("scheduled", qScheduled); err != nil {
				return err
			}
		}
	}

	if o.ScheduledAfter != nil {

		// query param scheduled__after
		var qrScheduledAfter string

		if o.ScheduledAfter != nil {
			qrScheduledAfter = *o.ScheduledAfter
		}
		qScheduledAfter := qrScheduledAfter
		if qScheduledAfter != "" {

			if err := r.SetQueryParam("scheduled__after", qScheduledAfter); err != nil {
				return err
			}
		}
	}

	if o.ScheduledBefore != nil {

		// query param scheduled__before
		var qrScheduledBefore string

		if o.ScheduledBefore != nil {
			qrScheduledBefore = *o.ScheduledBefore
		}
		qScheduledBefore := qrScheduledBefore
		if qScheduledBefore != "" {

			if err := r.SetQueryParam("scheduled__before", qScheduledBefore); err != nil {
				return err
			}
		}
	}

	if o.Started != nil {

		// query param started
		var qrStarted string

		if o.Started != nil {
			qrStarted = *o.Started
		}
		qStarted := qrStarted
		if qStarted != "" {

			if err := r.SetQueryParam("started", qStarted); err != nil {
				return err
			}
		}
	}

	if o.StartedAfter != nil {

		// query param started__after
		var qrStartedAfter string

		if o.StartedAfter != nil {
			qrStartedAfter = *o.StartedAfter
		}
		qStartedAfter := qrStartedAfter
		if qStartedAfter != "" {

			if err := r.SetQueryParam("started__after", qStartedAfter); err != nil {
				return err
			}
		}
	}

	if o.StartedBefore != nil {

		// query param started__before
		var qrStartedBefore string

		if o.StartedBefore != nil {
			qrStartedBefore = *o.StartedBefore
		}
		qStartedBefore := qrStartedBefore
		if qStartedBefore != "" {

			if err := r.SetQueryParam("started__before", qStartedBefore); err != nil {
				return err
			}
		}
	}

	if o.Status != nil {

		// query param status
		var qrStatus string

		if o.Status != nil {
			qrStatus = *o.Status
		}
		qStatus := qrStatus
		if qStatus != "" {

			if err := r.SetQueryParam("status", qStatus); err != nil {
				return err
			}
		}
	}

	if o.Statusn != nil {

		// query param status__n
		var qrStatusn string

		if o.Statusn != nil {
			qrStatusn = *o.Statusn
		}
		qStatusn := qrStatusn
		if qStatusn != "" {

			if err := r.SetQueryParam("status__n", qStatusn); err != nil {
				return err
			}
		}
	}

	if o.User != nil {

		// query param user
		var qrUser string

		if o.User != nil {
			qrUser = *o.User
		}
		qUser := qrUser
		if qUser != "" {

			if err := r.SetQueryParam("user", qUser); err != nil {
				return err
			}
		}
	}

	if o.Usern != nil {

		// query param user__n
		var qrUsern string

		if o.Usern != nil {
			qrUsern = *o.Usern
		}
		qUsern := qrUsern
		if qUsern != "" {

			if err := r.SetQueryParam("user__n", qUsern); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
