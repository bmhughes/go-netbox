// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2020 Samuel Mutel <12967891+smutel@users.noreply.github.com>
//
// Permission to use, copy, modify, and distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
//

package extras

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smutel/go-netbox/v3/netbox/models"
)

// ExtrasConfigContextsReadReader is a Reader for the ExtrasConfigContextsRead structure.
type ExtrasConfigContextsReadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExtrasConfigContextsReadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExtrasConfigContextsReadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewExtrasConfigContextsReadBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewExtrasConfigContextsReadDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewExtrasConfigContextsReadOK creates a ExtrasConfigContextsReadOK with default headers values
func NewExtrasConfigContextsReadOK() *ExtrasConfigContextsReadOK {
	return &ExtrasConfigContextsReadOK{}
}

/*
ExtrasConfigContextsReadOK describes a response with status code 200, with default header values.

ExtrasConfigContextsReadOK extras config contexts read o k
*/
type ExtrasConfigContextsReadOK struct {
	Payload *models.ConfigContext
}

// IsSuccess returns true when this extras config contexts read o k response has a 2xx status code
func (o *ExtrasConfigContextsReadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this extras config contexts read o k response has a 3xx status code
func (o *ExtrasConfigContextsReadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this extras config contexts read o k response has a 4xx status code
func (o *ExtrasConfigContextsReadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this extras config contexts read o k response has a 5xx status code
func (o *ExtrasConfigContextsReadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this extras config contexts read o k response a status code equal to that given
func (o *ExtrasConfigContextsReadOK) IsCode(code int) bool {
	return code == 200
}

func (o *ExtrasConfigContextsReadOK) Error() string {
	return fmt.Sprintf("[GET /extras/config-contexts/{id}/][%d] extrasConfigContextsReadOK  %+v", 200, o.Payload)
}

func (o *ExtrasConfigContextsReadOK) String() string {
	return fmt.Sprintf("[GET /extras/config-contexts/{id}/][%d] extrasConfigContextsReadOK  %+v", 200, o.Payload)
}

func (o *ExtrasConfigContextsReadOK) GetPayload() *models.ConfigContext {
	return o.Payload
}

func (o *ExtrasConfigContextsReadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ConfigContext)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExtrasConfigContextsReadBadRequest creates a ExtrasConfigContextsReadBadRequest with default headers values
func NewExtrasConfigContextsReadBadRequest() *ExtrasConfigContextsReadBadRequest {
	return &ExtrasConfigContextsReadBadRequest{}
}

/*
ExtrasConfigContextsReadBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ExtrasConfigContextsReadBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this extras config contexts read bad request response has a 2xx status code
func (o *ExtrasConfigContextsReadBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this extras config contexts read bad request response has a 3xx status code
func (o *ExtrasConfigContextsReadBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this extras config contexts read bad request response has a 4xx status code
func (o *ExtrasConfigContextsReadBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this extras config contexts read bad request response has a 5xx status code
func (o *ExtrasConfigContextsReadBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this extras config contexts read bad request response a status code equal to that given
func (o *ExtrasConfigContextsReadBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *ExtrasConfigContextsReadBadRequest) Error() string {
	return fmt.Sprintf("[GET /extras/config-contexts/{id}/][%d] extrasConfigContextsReadBadRequest  %+v", 400, o.Payload)
}

func (o *ExtrasConfigContextsReadBadRequest) String() string {
	return fmt.Sprintf("[GET /extras/config-contexts/{id}/][%d] extrasConfigContextsReadBadRequest  %+v", 400, o.Payload)
}

func (o *ExtrasConfigContextsReadBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *ExtrasConfigContextsReadBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExtrasConfigContextsReadDefault creates a ExtrasConfigContextsReadDefault with default headers values
func NewExtrasConfigContextsReadDefault(code int) *ExtrasConfigContextsReadDefault {
	return &ExtrasConfigContextsReadDefault{
		_statusCode: code,
	}
}

/*
ExtrasConfigContextsReadDefault describes a response with status code -1, with default header values.

Unexpected Response
*/
type ExtrasConfigContextsReadDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the extras config contexts read default response
func (o *ExtrasConfigContextsReadDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this extras config contexts read default response has a 2xx status code
func (o *ExtrasConfigContextsReadDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this extras config contexts read default response has a 3xx status code
func (o *ExtrasConfigContextsReadDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this extras config contexts read default response has a 4xx status code
func (o *ExtrasConfigContextsReadDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this extras config contexts read default response has a 5xx status code
func (o *ExtrasConfigContextsReadDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this extras config contexts read default response a status code equal to that given
func (o *ExtrasConfigContextsReadDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *ExtrasConfigContextsReadDefault) Error() string {
	return fmt.Sprintf("[GET /extras/config-contexts/{id}/][%d] extras_config-contexts_read default  %+v", o._statusCode, o.Payload)
}

func (o *ExtrasConfigContextsReadDefault) String() string {
	return fmt.Sprintf("[GET /extras/config-contexts/{id}/][%d] extras_config-contexts_read default  %+v", o._statusCode, o.Payload)
}

func (o *ExtrasConfigContextsReadDefault) GetPayload() interface{} {
	return o.Payload
}

func (o *ExtrasConfigContextsReadDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
