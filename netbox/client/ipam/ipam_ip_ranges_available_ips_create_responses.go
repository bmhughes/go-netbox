// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2020 Samuel Mutel <12967891+smutel@users.noreply.github.com>
//
// Permission to use, copy, modify, and distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
//

package ipam

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smutel/go-netbox/v3/netbox/models"
)

// IpamIPRangesAvailableIpsCreateReader is a Reader for the IpamIPRangesAvailableIpsCreate structure.
type IpamIPRangesAvailableIpsCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IpamIPRangesAvailableIpsCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewIpamIPRangesAvailableIpsCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewIpamIPRangesAvailableIpsCreateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewIpamIPRangesAvailableIpsCreateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewIpamIPRangesAvailableIpsCreateCreated creates a IpamIPRangesAvailableIpsCreateCreated with default headers values
func NewIpamIPRangesAvailableIpsCreateCreated() *IpamIPRangesAvailableIpsCreateCreated {
	return &IpamIPRangesAvailableIpsCreateCreated{}
}

/*
IpamIPRangesAvailableIpsCreateCreated describes a response with status code 201, with default header values.

IpamIPRangesAvailableIpsCreateCreated ipam Ip ranges available ips create created
*/
type IpamIPRangesAvailableIpsCreateCreated struct {
	Payload []*models.IPAddress
}

// IsSuccess returns true when this ipam Ip ranges available ips create created response has a 2xx status code
func (o *IpamIPRangesAvailableIpsCreateCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this ipam Ip ranges available ips create created response has a 3xx status code
func (o *IpamIPRangesAvailableIpsCreateCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ipam Ip ranges available ips create created response has a 4xx status code
func (o *IpamIPRangesAvailableIpsCreateCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this ipam Ip ranges available ips create created response has a 5xx status code
func (o *IpamIPRangesAvailableIpsCreateCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this ipam Ip ranges available ips create created response a status code equal to that given
func (o *IpamIPRangesAvailableIpsCreateCreated) IsCode(code int) bool {
	return code == 201
}

func (o *IpamIPRangesAvailableIpsCreateCreated) Error() string {
	return fmt.Sprintf("[POST /ipam/ip-ranges/{id}/available-ips/][%d] ipamIpRangesAvailableIpsCreateCreated  %+v", 201, o.Payload)
}

func (o *IpamIPRangesAvailableIpsCreateCreated) String() string {
	return fmt.Sprintf("[POST /ipam/ip-ranges/{id}/available-ips/][%d] ipamIpRangesAvailableIpsCreateCreated  %+v", 201, o.Payload)
}

func (o *IpamIPRangesAvailableIpsCreateCreated) GetPayload() []*models.IPAddress {
	return o.Payload
}

func (o *IpamIPRangesAvailableIpsCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIpamIPRangesAvailableIpsCreateBadRequest creates a IpamIPRangesAvailableIpsCreateBadRequest with default headers values
func NewIpamIPRangesAvailableIpsCreateBadRequest() *IpamIPRangesAvailableIpsCreateBadRequest {
	return &IpamIPRangesAvailableIpsCreateBadRequest{}
}

/*
IpamIPRangesAvailableIpsCreateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type IpamIPRangesAvailableIpsCreateBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this ipam Ip ranges available ips create bad request response has a 2xx status code
func (o *IpamIPRangesAvailableIpsCreateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this ipam Ip ranges available ips create bad request response has a 3xx status code
func (o *IpamIPRangesAvailableIpsCreateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this ipam Ip ranges available ips create bad request response has a 4xx status code
func (o *IpamIPRangesAvailableIpsCreateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this ipam Ip ranges available ips create bad request response has a 5xx status code
func (o *IpamIPRangesAvailableIpsCreateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this ipam Ip ranges available ips create bad request response a status code equal to that given
func (o *IpamIPRangesAvailableIpsCreateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *IpamIPRangesAvailableIpsCreateBadRequest) Error() string {
	return fmt.Sprintf("[POST /ipam/ip-ranges/{id}/available-ips/][%d] ipamIpRangesAvailableIpsCreateBadRequest  %+v", 400, o.Payload)
}

func (o *IpamIPRangesAvailableIpsCreateBadRequest) String() string {
	return fmt.Sprintf("[POST /ipam/ip-ranges/{id}/available-ips/][%d] ipamIpRangesAvailableIpsCreateBadRequest  %+v", 400, o.Payload)
}

func (o *IpamIPRangesAvailableIpsCreateBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *IpamIPRangesAvailableIpsCreateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIpamIPRangesAvailableIpsCreateDefault creates a IpamIPRangesAvailableIpsCreateDefault with default headers values
func NewIpamIPRangesAvailableIpsCreateDefault(code int) *IpamIPRangesAvailableIpsCreateDefault {
	return &IpamIPRangesAvailableIpsCreateDefault{
		_statusCode: code,
	}
}

/*
IpamIPRangesAvailableIpsCreateDefault describes a response with status code -1, with default header values.

Unexpected Response
*/
type IpamIPRangesAvailableIpsCreateDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the ipam ip ranges available ips create default response
func (o *IpamIPRangesAvailableIpsCreateDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this ipam ip ranges available ips create default response has a 2xx status code
func (o *IpamIPRangesAvailableIpsCreateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this ipam ip ranges available ips create default response has a 3xx status code
func (o *IpamIPRangesAvailableIpsCreateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this ipam ip ranges available ips create default response has a 4xx status code
func (o *IpamIPRangesAvailableIpsCreateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this ipam ip ranges available ips create default response has a 5xx status code
func (o *IpamIPRangesAvailableIpsCreateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this ipam ip ranges available ips create default response a status code equal to that given
func (o *IpamIPRangesAvailableIpsCreateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *IpamIPRangesAvailableIpsCreateDefault) Error() string {
	return fmt.Sprintf("[POST /ipam/ip-ranges/{id}/available-ips/][%d] ipam_ip-ranges_available-ips_create default  %+v", o._statusCode, o.Payload)
}

func (o *IpamIPRangesAvailableIpsCreateDefault) String() string {
	return fmt.Sprintf("[POST /ipam/ip-ranges/{id}/available-ips/][%d] ipam_ip-ranges_available-ips_create default  %+v", o._statusCode, o.Payload)
}

func (o *IpamIPRangesAvailableIpsCreateDefault) GetPayload() interface{} {
	return o.Payload
}

func (o *IpamIPRangesAvailableIpsCreateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
