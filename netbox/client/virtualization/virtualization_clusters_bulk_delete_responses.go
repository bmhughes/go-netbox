// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2020 Samuel Mutel <12967891+smutel@users.noreply.github.com>
//
// Permission to use, copy, modify, and distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
//

package virtualization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// VirtualizationClustersBulkDeleteReader is a Reader for the VirtualizationClustersBulkDelete structure.
type VirtualizationClustersBulkDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VirtualizationClustersBulkDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewVirtualizationClustersBulkDeleteNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewVirtualizationClustersBulkDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewVirtualizationClustersBulkDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVirtualizationClustersBulkDeleteNoContent creates a VirtualizationClustersBulkDeleteNoContent with default headers values
func NewVirtualizationClustersBulkDeleteNoContent() *VirtualizationClustersBulkDeleteNoContent {
	return &VirtualizationClustersBulkDeleteNoContent{}
}

/*
VirtualizationClustersBulkDeleteNoContent describes a response with status code 204, with default header values.

VirtualizationClustersBulkDeleteNoContent virtualization clusters bulk delete no content
*/
type VirtualizationClustersBulkDeleteNoContent struct {
}

// IsSuccess returns true when this virtualization clusters bulk delete no content response has a 2xx status code
func (o *VirtualizationClustersBulkDeleteNoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this virtualization clusters bulk delete no content response has a 3xx status code
func (o *VirtualizationClustersBulkDeleteNoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this virtualization clusters bulk delete no content response has a 4xx status code
func (o *VirtualizationClustersBulkDeleteNoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this virtualization clusters bulk delete no content response has a 5xx status code
func (o *VirtualizationClustersBulkDeleteNoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this virtualization clusters bulk delete no content response a status code equal to that given
func (o *VirtualizationClustersBulkDeleteNoContent) IsCode(code int) bool {
	return code == 204
}

func (o *VirtualizationClustersBulkDeleteNoContent) Error() string {
	return fmt.Sprintf("[DELETE /virtualization/clusters/][%d] virtualizationClustersBulkDeleteNoContent ", 204)
}

func (o *VirtualizationClustersBulkDeleteNoContent) String() string {
	return fmt.Sprintf("[DELETE /virtualization/clusters/][%d] virtualizationClustersBulkDeleteNoContent ", 204)
}

func (o *VirtualizationClustersBulkDeleteNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewVirtualizationClustersBulkDeleteBadRequest creates a VirtualizationClustersBulkDeleteBadRequest with default headers values
func NewVirtualizationClustersBulkDeleteBadRequest() *VirtualizationClustersBulkDeleteBadRequest {
	return &VirtualizationClustersBulkDeleteBadRequest{}
}

/*
VirtualizationClustersBulkDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type VirtualizationClustersBulkDeleteBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this virtualization clusters bulk delete bad request response has a 2xx status code
func (o *VirtualizationClustersBulkDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this virtualization clusters bulk delete bad request response has a 3xx status code
func (o *VirtualizationClustersBulkDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this virtualization clusters bulk delete bad request response has a 4xx status code
func (o *VirtualizationClustersBulkDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this virtualization clusters bulk delete bad request response has a 5xx status code
func (o *VirtualizationClustersBulkDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this virtualization clusters bulk delete bad request response a status code equal to that given
func (o *VirtualizationClustersBulkDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *VirtualizationClustersBulkDeleteBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /virtualization/clusters/][%d] virtualizationClustersBulkDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *VirtualizationClustersBulkDeleteBadRequest) String() string {
	return fmt.Sprintf("[DELETE /virtualization/clusters/][%d] virtualizationClustersBulkDeleteBadRequest  %+v", 400, o.Payload)
}

func (o *VirtualizationClustersBulkDeleteBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *VirtualizationClustersBulkDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVirtualizationClustersBulkDeleteDefault creates a VirtualizationClustersBulkDeleteDefault with default headers values
func NewVirtualizationClustersBulkDeleteDefault(code int) *VirtualizationClustersBulkDeleteDefault {
	return &VirtualizationClustersBulkDeleteDefault{
		_statusCode: code,
	}
}

/*
VirtualizationClustersBulkDeleteDefault describes a response with status code -1, with default header values.

Unexpected Response
*/
type VirtualizationClustersBulkDeleteDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the virtualization clusters bulk delete default response
func (o *VirtualizationClustersBulkDeleteDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this virtualization clusters bulk delete default response has a 2xx status code
func (o *VirtualizationClustersBulkDeleteDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this virtualization clusters bulk delete default response has a 3xx status code
func (o *VirtualizationClustersBulkDeleteDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this virtualization clusters bulk delete default response has a 4xx status code
func (o *VirtualizationClustersBulkDeleteDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this virtualization clusters bulk delete default response has a 5xx status code
func (o *VirtualizationClustersBulkDeleteDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this virtualization clusters bulk delete default response a status code equal to that given
func (o *VirtualizationClustersBulkDeleteDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *VirtualizationClustersBulkDeleteDefault) Error() string {
	return fmt.Sprintf("[DELETE /virtualization/clusters/][%d] virtualization_clusters_bulk_delete default  %+v", o._statusCode, o.Payload)
}

func (o *VirtualizationClustersBulkDeleteDefault) String() string {
	return fmt.Sprintf("[DELETE /virtualization/clusters/][%d] virtualization_clusters_bulk_delete default  %+v", o._statusCode, o.Payload)
}

func (o *VirtualizationClustersBulkDeleteDefault) GetPayload() interface{} {
	return o.Payload
}

func (o *VirtualizationClustersBulkDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
