// Code generated by go-swagger; DO NOT EDIT.

// Copyright (c) 2020 Samuel Mutel <12967891+smutel@users.noreply.github.com>
//
// Permission to use, copy, modify, and distribute this software for any
// purpose with or without fee is hereby granted, provided that the above
// copyright notice and this permission notice appear in all copies.
//
// THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
// WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
// ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
// WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
// ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
// OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
//

package virtualization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/smutel/go-netbox/v3/netbox/models"
)

// VirtualizationInterfacesBulkPartialUpdateReader is a Reader for the VirtualizationInterfacesBulkPartialUpdate structure.
type VirtualizationInterfacesBulkPartialUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *VirtualizationInterfacesBulkPartialUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewVirtualizationInterfacesBulkPartialUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewVirtualizationInterfacesBulkPartialUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewVirtualizationInterfacesBulkPartialUpdateDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewVirtualizationInterfacesBulkPartialUpdateOK creates a VirtualizationInterfacesBulkPartialUpdateOK with default headers values
func NewVirtualizationInterfacesBulkPartialUpdateOK() *VirtualizationInterfacesBulkPartialUpdateOK {
	return &VirtualizationInterfacesBulkPartialUpdateOK{}
}

/*
VirtualizationInterfacesBulkPartialUpdateOK describes a response with status code 200, with default header values.

VirtualizationInterfacesBulkPartialUpdateOK virtualization interfaces bulk partial update o k
*/
type VirtualizationInterfacesBulkPartialUpdateOK struct {
	Payload *models.VMInterface
}

// IsSuccess returns true when this virtualization interfaces bulk partial update o k response has a 2xx status code
func (o *VirtualizationInterfacesBulkPartialUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this virtualization interfaces bulk partial update o k response has a 3xx status code
func (o *VirtualizationInterfacesBulkPartialUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this virtualization interfaces bulk partial update o k response has a 4xx status code
func (o *VirtualizationInterfacesBulkPartialUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this virtualization interfaces bulk partial update o k response has a 5xx status code
func (o *VirtualizationInterfacesBulkPartialUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this virtualization interfaces bulk partial update o k response a status code equal to that given
func (o *VirtualizationInterfacesBulkPartialUpdateOK) IsCode(code int) bool {
	return code == 200
}

func (o *VirtualizationInterfacesBulkPartialUpdateOK) Error() string {
	return fmt.Sprintf("[PATCH /virtualization/interfaces/][%d] virtualizationInterfacesBulkPartialUpdateOK  %+v", 200, o.Payload)
}

func (o *VirtualizationInterfacesBulkPartialUpdateOK) String() string {
	return fmt.Sprintf("[PATCH /virtualization/interfaces/][%d] virtualizationInterfacesBulkPartialUpdateOK  %+v", 200, o.Payload)
}

func (o *VirtualizationInterfacesBulkPartialUpdateOK) GetPayload() *models.VMInterface {
	return o.Payload
}

func (o *VirtualizationInterfacesBulkPartialUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VMInterface)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVirtualizationInterfacesBulkPartialUpdateBadRequest creates a VirtualizationInterfacesBulkPartialUpdateBadRequest with default headers values
func NewVirtualizationInterfacesBulkPartialUpdateBadRequest() *VirtualizationInterfacesBulkPartialUpdateBadRequest {
	return &VirtualizationInterfacesBulkPartialUpdateBadRequest{}
}

/*
VirtualizationInterfacesBulkPartialUpdateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type VirtualizationInterfacesBulkPartialUpdateBadRequest struct {
	Payload interface{}
}

// IsSuccess returns true when this virtualization interfaces bulk partial update bad request response has a 2xx status code
func (o *VirtualizationInterfacesBulkPartialUpdateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this virtualization interfaces bulk partial update bad request response has a 3xx status code
func (o *VirtualizationInterfacesBulkPartialUpdateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this virtualization interfaces bulk partial update bad request response has a 4xx status code
func (o *VirtualizationInterfacesBulkPartialUpdateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this virtualization interfaces bulk partial update bad request response has a 5xx status code
func (o *VirtualizationInterfacesBulkPartialUpdateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this virtualization interfaces bulk partial update bad request response a status code equal to that given
func (o *VirtualizationInterfacesBulkPartialUpdateBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *VirtualizationInterfacesBulkPartialUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /virtualization/interfaces/][%d] virtualizationInterfacesBulkPartialUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *VirtualizationInterfacesBulkPartialUpdateBadRequest) String() string {
	return fmt.Sprintf("[PATCH /virtualization/interfaces/][%d] virtualizationInterfacesBulkPartialUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *VirtualizationInterfacesBulkPartialUpdateBadRequest) GetPayload() interface{} {
	return o.Payload
}

func (o *VirtualizationInterfacesBulkPartialUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewVirtualizationInterfacesBulkPartialUpdateDefault creates a VirtualizationInterfacesBulkPartialUpdateDefault with default headers values
func NewVirtualizationInterfacesBulkPartialUpdateDefault(code int) *VirtualizationInterfacesBulkPartialUpdateDefault {
	return &VirtualizationInterfacesBulkPartialUpdateDefault{
		_statusCode: code,
	}
}

/*
VirtualizationInterfacesBulkPartialUpdateDefault describes a response with status code -1, with default header values.

Unexpected Response
*/
type VirtualizationInterfacesBulkPartialUpdateDefault struct {
	_statusCode int

	Payload interface{}
}

// Code gets the status code for the virtualization interfaces bulk partial update default response
func (o *VirtualizationInterfacesBulkPartialUpdateDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this virtualization interfaces bulk partial update default response has a 2xx status code
func (o *VirtualizationInterfacesBulkPartialUpdateDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this virtualization interfaces bulk partial update default response has a 3xx status code
func (o *VirtualizationInterfacesBulkPartialUpdateDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this virtualization interfaces bulk partial update default response has a 4xx status code
func (o *VirtualizationInterfacesBulkPartialUpdateDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this virtualization interfaces bulk partial update default response has a 5xx status code
func (o *VirtualizationInterfacesBulkPartialUpdateDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this virtualization interfaces bulk partial update default response a status code equal to that given
func (o *VirtualizationInterfacesBulkPartialUpdateDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *VirtualizationInterfacesBulkPartialUpdateDefault) Error() string {
	return fmt.Sprintf("[PATCH /virtualization/interfaces/][%d] virtualization_interfaces_bulk_partial_update default  %+v", o._statusCode, o.Payload)
}

func (o *VirtualizationInterfacesBulkPartialUpdateDefault) String() string {
	return fmt.Sprintf("[PATCH /virtualization/interfaces/][%d] virtualization_interfaces_bulk_partial_update default  %+v", o._statusCode, o.Payload)
}

func (o *VirtualizationInterfacesBulkPartialUpdateDefault) GetPayload() interface{} {
	return o.Payload
}

func (o *VirtualizationInterfacesBulkPartialUpdateDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
